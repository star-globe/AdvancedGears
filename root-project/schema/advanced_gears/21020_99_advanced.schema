package advanced_gears;
import "improbable/standard_library.schema";
import "improbable/gdk/core/common.schema";
import "advanced_gears/common.schema";

// advanced:21020~21099
type ChangeEquipInfo {
    PosturePoint point = 1;
    EquipData equip = 2;
}

enum EquipForm {
    None = 0;
    Idle  = 1;
    Aim = 2;
    Firing = 3;
}

type ChangeFormInfo {
    EquipForm form = 1;
} 

enum EquipStyle {
    None = 0;
    SingleArmed = 1;
    DoubleTrigger = 2;
    CQC = 3;
    Seated = 4;
}

component EquipComponent {
    id = 21020;

    map<PosturePoint,EquipData> equip_map = 1;

    EquipForm form = 2;
    EquipStyle style = 3;

    command improbable.gdk.core.Empty set_equip(ChangeEquipInfo);
    command improbable.gdk.core.Empty change_form(ChangeFormInfo);
}

type StickControllerInfo {
    float horizontal = 1;
    float vertical = 2;
    float yaw = 3;
    float pitch = 4;
}

type ActionControllerInfo {
    bool running = 1;
    bool jump = 2;
    int64 click_bits = 3;
}

type ControllerInfo {
    float horizontal = 1;
    float vertical = 2;
    bool running = 3;
    float yaw = 4;
    float pitch = 5;
    bool jump = 6;
    int64 click_bits = 7;
}

component AdvancedUnitController {
    id = 21030;

    bool is_player = 1;
    ActionControllerInfo action = 2;
}

component AdvancedPlayerInput {
    id = 21040;
}

component AdvancedUnmannedInput {
    id = 21041;

    IntervalChecker interval = 2;
    int32 logic_pattern = 3;
}

component MinimapComponent {
    id = 21050;
}

component SymbolicTowerSight {
    id = 21051;
}

component PlayerRespawn {
    id = 21060;

    bool is_start = 1;
    double rest_time = 2;
    improbable.Coordinates position = 3;

    event improbable.gdk.core.Empty respawn;
}