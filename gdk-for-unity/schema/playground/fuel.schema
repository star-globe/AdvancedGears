package playground;
import "from_gdk_packages/com.improbable.gdk.core/common.schema";
import "playground/common.schema";
import "improbable/vector3.schema";

// fuel:21100~21109
enum FuelModifyType
{
    None = 0;
    Consume = 1;
    Feed = 2;
    Absorb = 3;
}

type FuelModifier {
    FuelModifyType type = 1;
    int32 amount = 2;
}

component FuelComponent {
    id = 21100;

    int32 fuel = 1;
    int32 max_fuel = 2;

    command improbable.common.Empty modify_fuel(FuelModifier);
    event FuelModifier fuel_modified;
}

component FuelServer {
    id = 21101;

    IntervalChecker interval = 1;
    float range = 2;
    int32 feed_rate = 3;
    int32 gain_rate = 4;
}

enum SupplyOrderType {
    None = 0;
    Deliver = 1;
    Accept = 2;
}

type SupplyPoint {
    improbable.Vector3f pos = 2;
    EntityId stronghold_id = 3;
}

type SupplyOrder {
    SupplyOrderType type = 1;
    SupplyPoint point = 2;
}

type OrderResult {
    bool result = 1;
    EntityId self_id = 2;
    SupplyOrder order = 3;
}

type SupplyPlan {
    list<SupplyOrder> orders;
}

type SupplyPointsDetail {
    SupplyPoint point = 1;
    int32 reserve = 2;
}

component FuelSupplyer {
    id = 21102;

    SupplyOrder order = 1;
    float range = 2;
    EntityId manager_id = 3;

    IntervalChecker interval = 4;

    command improbable.common.Empty set_order(SupplyOrder); 
}

component FuleSupplyManager {
    id = 21103;

    IntervalChecker interval = 1;
    map<EntityId,SupplyPointsDetail> supply_points = 2;
    map<EntityId,SupplyPlan> supply_orders = 3;
    list<EntityId> free_supplyers = 4;

    command improbable.common.Empty finish_order(OrderResult);
}