package playground;
import "improbable/vector3.schema";
import "from_gdk_packages/com.improbable.gdk.core/common.schema";

enum UnitType {
    None = 0;
    Soldier = 1;
    Commander = 2;
    Stronghold = 3;
    Turret = 4;
    Advanced = 5;
    Supply = 6;
}

enum UnitSide {
    None = 0;
    A = 1;  // AltriaUnion = 1;
    B = 2;  // GlobalEconomicalCommons = 2;
    C = 3;  // JormuTreatyOrganization = 3;
    Others = 99;
}

enum UnitState {
    None = 0;
    Alive = 1;
    Dead = 2;
}

enum OrderType {
    Idle = 0;
    Move = 1;
    Attack = 2;
    Keep = 3;
    Escape = 5;
}

type OrderInfo {
    OrderType order = 1;
}

// state:20000~20009
component BaseUnitStatus {
    id = 20000;
    UnitSide side = 1;
    UnitType type = 2;
    UnitState state = 3;
    OrderType order = 4;

    command improbable.common.Empty set_order(OrderInfo);
}

type HealthModifier {
    uint32 type = 1;
    int32 amount = 2;
}

type HealthModifiedInfo {
    HealthModifier modifier = 1;
    int32 health_before = 2;
    int32 health_after = 3;
}

component BaseUnitHealth {
    id = 20002;
    int32 health = 1;
    int32 max_health = 2;

    int32 defense = 3;

    command improbable.common.Empty modify_health(HealthModifier);
    event HealthModifiedInfo health_modified;
}

type FuelModifier {
    uint32 type = 1;
    int32 amount = 2;
}

type FuelModifiedInfo {
    FuelModifier modifier = 1;
    int32 fuel_before = 2;
    int32 fuel_after = 3;
}

component BaseUnitFuel {
    id = 2003;

    int32 fuel = 1;
    int32 max_fuel = 2;

    command improbable.common.Empty modify_fuel(FuelModifier);
    event FuelModifiedInfo fuel_modified;
}

// move:20010~20019
type TargetInfo {
    bool is_target = 1;
    improbable.Vector3f position = 2;
    EntityId commander_id = 3;
    float ally_range = 4;
}

component BaseUnitMovement {
    id = 20010;

    float move_speed = 1;
    float rot_speed = 2;

    bool is_target = 3;
    improbable.Vector3f target_position = 4;

    TargetInfo target_info = 5;
    improbable.Vector3f commander_position = 6;

    command improbable.common.Empty set_target(TargetInfo);
}

component BaseUnitSight {
    id = 20011;

    float range = 1;
    float interval = 2;
    float last_searched = 3;
    // ability:night vision
}

type AttackTargetInfo {
    uint32 type = 1;
    improbable.Vector3f target_position = 2;
}

component BaseUnitAction {
    id = 20012;

    float interval = 1;
    float last_acted = 2;

    float attack_range = 3;
    float attack_angle = 4;
    float angle_speed = 5;

    bool is_target = 6;
    list<improbable.Vector3f> enemy_positions = 7;

    event AttackTargetInfo fire_triggered;
}

type FollowerInfo {
    EntityId entity_id = 1;
}

// commander:20020~
component CommanderStatus {
    id = 20020;

    OrderType self_order = 1;
    OrderType upper_order = 2;

    uint32 rank = 3;

    float ally_range = 4;
    list<EntityId> followers = 5;

    command improbable.common.Empty add_folower(FollowerInfo);
}

type WarPower {
    UnitSide side = 1;
    float power = 2;
}

component CommanderSight {
    id = 20021;

    float range = 1;
    float interval = 2;
    float last_searched = 3;

    bool is_target = 4;
    improbable.Vector3f target_position = 5;

    list<WarPower> war_powers = 6;
}

type ProductOrder {
    EntityId customer = 1;
    UnitType typr = 2;
    int32 number = 3;
}

// stronghold:20030~
component StrongholdUnitStatus {
    id = 20030;

    float capture_range = 1;
}

component UnitFactoryComponent {
    id = 20032;

    int32 resource = 1;
    transient list<ProductOrder> orders = 2;

    command improbable.common.Empty send_order(ProductOrder);
}
