package playground;
import "improbable/vector3.schema";
import "from_gdk_packages/com.improbable.gdk.core/common.schema";

enum UnitState {
    None = 0;
    Alive = 1;
    Dead = 2;
}

enum ActState {
    Idle = 0;
    Attack = 1;
    Keep = 2;
    Escape = 3;
}

type ActStateInfo {
    ActState state = 1;
}

component BaseUnitStatus {
    id = 20000;
    uint32 side = 1;
    UnitState state = 2;
    ActState act = 3;

    command improbable.common.Empty modify_actstate(ActStateInfo);
}

component BaseUnitMovement {
    id = 20001;
    improbable.Vector3f move_velocity = 1;
}

type HealthModifier {
    uint32 type = 1;
    int32 amount = 2;
}

type HealthModifiedInfo {
    HealthModifier modifier = 1;
    int32 health_before = 2;
    int32 health_after = 3;
}

component BaseUnitHealth {
    id = 20002;
    int32 health = 1;
    int32 max_health = 2;

    command improbable.common.Empty modify_health(HealthModifier);
    event HealthModifiedInfo health_modified;
}


